{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\src\\App.svelte",
    "..\\src\\components\\ImageView.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import ImageView from \"./components/ImageView.svelte\";\n  import { onMount } from \"svelte\";\n\n  export let page = 1;\n  export let limit = 6;\n\n  let overlayVisible = false;\n  let imageList = [];\n  let overlayImageUrl = \"\";\n\n  onMount(() => {\n    loadImageList();\n  });\n\n  const loadImageList = async () => {\n    const req = await fetch(\n      `https://picsum.photos/v2/list?page=${page}&limit=${limit}`\n    );\n\n    const json = await req.json();\n    imageList = json;\n  };\n\n  const onClickNext = async () => {\n    page++;\n    loadImageList();\n  };\n\n  const onClickBack = async () => {\n    if (page === 1) return;\n\n    page--;\n    loadImageList();\n  };\n\n  const onImageClicked = event => {\n    overlayImageUrl = event.detail.imageSource;\n    overlayVisible = true;\n  };\n\n  $: overlayStyle = overlayVisible\n    ? `background-image: url(\"${overlayImageUrl}\");`\n    : \"\";\n</script>\n\n<style>\n  h1 {\n    color: rgb(32, 32, 32);\n  }\n\n  .overlay {\n    width: 80%;\n    height: 80%;\n\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    color: #a1a1a1;\n\n    border-radius: 0.25rem;\n    padding: 1rem;\n\n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: cover;\n\n    -webkit-background-size: cover;\n    -moz-background-size: cover;\n    -o-background-size: cover;\n\n    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1),\n      0 4px 6px -2px rgba(0, 0, 0, 0.05);\n  }\n\n  .overlay::before {\n    content: \"\\00d7\";\n    display: block;\n    width: 100%;\n    text-align: right;\n  }\n\n  .images {\n    display: flex;\n    flex-wrap: wrap;\n    justify-items: center;\n  }\n\n  .container {\n    display: flex;\n    flex-direction: column;\n    width: 80%;\n    max-width: 1024px;\n    justify-content: center;\n    margin-right: auto;\n    margin-left: auto;\n    margin-bottom: 2rem;\n  }\n\n  .header {\n    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1),\n      0 4px 6px -2px rgba(0, 0, 0, 0.05);\n    display: flex;\n    justify-content: center;\n    margin-bottom: 2rem;\n  }\n\n  .buttons {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding-left: 2rem;\n    padding-right: 2rem;\n  }\n\n  .buttons button,\n  div {\n    font-size: 1.2rem;\n  }\n</style>\n\n<div class=\"content\">\n  <div class=\"header\">\n    <h1>Svelte Example Lorem Picsum</h1>\n  </div>\n\n  <div class=\"container\">\n    <div class=\"images\">\n      {#each imageList as imageItem}\n        <ImageView\n          on:showImage={onImageClicked}\n          width=\"300\"\n          height=\"200\"\n          imageId={imageItem.id}\n          alt={imageItem.author}\n          src={imageItem.download_url} />\n      {/each}\n    </div>\n    <div class=\"buttons\">\n      {#if page > 1}\n        <button on:click={onClickBack}>&lsaquo;&lsaquo; {page - 1}</button>\n      {:else}\n        <div />\n      {/if}\n      <div>{page}</div>\n      <button on:click={onClickNext}>{page + 1} &rsaquo;&rsaquo;</button>\n    </div>\n  </div>\n\n  {#if overlayVisible}\n    <div\n      class=\"overlay\"\n      style={overlayStyle}\n      on:click={evt => (overlayVisible = false)} />\n  {/if}\n</div>\n",
    "<script>\r\n  import { createEventDispatcher } from \"svelte\";\r\n\r\n  export let width = 300;\r\n  export let height = width;\r\n  export let imageId = 0;\r\n  export let alt = \"an image\";\r\n  export let src = \"\";\r\n\r\n  const dispatch = createEventDispatcher();\r\n  let image = \"\";\r\n</script>\r\n\r\n<style>\r\n  .image {\r\n    border-radius: 1rem;\r\n    padding: 0.6rem;\r\n    margin: 0.6rem;\r\n\r\n    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1),\r\n      0 4px 6px -2px rgba(0, 0, 0, 0.05);\r\n  }\r\n</style>\r\n\r\n<div on:click={() => dispatch('showImage', { imageSource: src })}>\r\n  <img\r\n    class=\"image\"\r\n    src={`https://picsum.photos/id/${imageId}/${width}/${height}`}\r\n    {alt} />\r\n</div>\r\n"
  ],
  "names": [],
  "mappings": "AA+CE,EAAE,eAAC,CAAC,AACF,KAAK,CAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,AACxB,CAAC,AAED,QAAQ,eAAC,CAAC,AACR,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,GAAG,CAEX,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,CACR,IAAI,CAAE,GAAG,CACT,SAAS,CAAE,UAAU,IAAI,CAAC,CAAC,IAAI,CAAC,CAChC,KAAK,CAAE,OAAO,CAEd,aAAa,CAAE,OAAO,CACtB,OAAO,CAAE,IAAI,CAEb,iBAAiB,CAAE,SAAS,CAC5B,mBAAmB,CAAE,MAAM,CAC3B,eAAe,CAAE,KAAK,CAEtB,uBAAuB,CAAE,KAAK,CAC9B,oBAAoB,CAAE,KAAK,CAC3B,kBAAkB,CAAE,KAAK,CAEzB,UAAU,CAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;MAC9C,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,AACtC,CAAC,AAED,uBAAQ,QAAQ,AAAC,CAAC,AAChB,OAAO,CAAE,OAAO,CAChB,OAAO,CAAE,KAAK,CACd,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,KAAK,AACnB,CAAC,AAED,OAAO,eAAC,CAAC,AACP,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,IAAI,CACf,aAAa,CAAE,MAAM,AACvB,CAAC,AAED,UAAU,eAAC,CAAC,AACV,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,KAAK,CAAE,GAAG,CACV,SAAS,CAAE,MAAM,CACjB,eAAe,CAAE,MAAM,CACvB,YAAY,CAAE,IAAI,CAClB,WAAW,CAAE,IAAI,CACjB,aAAa,CAAE,IAAI,AACrB,CAAC,AAED,OAAO,eAAC,CAAC,AACP,UAAU,CAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;MAC9C,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CACpC,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,aAAa,CAAE,IAAI,AACrB,CAAC,AAED,QAAQ,eAAC,CAAC,AACR,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,CAC9B,WAAW,CAAE,MAAM,CACnB,YAAY,CAAE,IAAI,CAClB,aAAa,CAAE,IAAI,AACrB,CAAC,AAED,uBAAQ,CAAC,qBAAM,CACf,GAAG,eAAC,CAAC,AACH,SAAS,CAAE,MAAM,AACnB,CAAC;ACzGD,MAAM,eAAC,CAAC,AACN,aAAa,CAAE,IAAI,CACnB,OAAO,CAAE,MAAM,CACf,MAAM,CAAE,MAAM,CAEd,UAAU,CAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;MAC9C,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,AACtC,CAAC"
}